{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { useFonts, Poppins_600SemiBold } from \"@expo-google-fonts/poppins\";\nimport { Inter_600SemiBold } from \"@expo-google-fonts/inter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function NavigationButton(props) {\n  var name = props.name,\n    pageName = props.pageName,\n    onPress = props.onPress,\n    accessibilityState = props.accessibilityState;\n  var focused = accessibilityState.selected;\n  var _useFonts = useFonts({\n      Poppins_600SemiBold: Poppins_600SemiBold,\n      Inter_600SemiBold: Inter_600SemiBold\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsx(TouchableOpacity, {\n    onPress: onPress,\n    children: _jsxs(View, {\n      style: styles.buttonNavigation,\n      children: [_jsx(MaterialCommunityIcons, {\n        name: name,\n        size: 30,\n        color: focused ? \"#23AFFF\" : \"#A9A3A3\"\n      }), _jsx(Text, {\n        style: [styles.texto, {\n          color: focused ? \"#23AFFF\" : \"#A9A3A3\"\n        }],\n        children: pageName\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  buttonNavigation: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 200,\n    paddingLeft: 20,\n    paddingRight: 20,\n    paddingTop: 5,\n    paddingBottom: 5\n  },\n  texto: {\n    fontFamily: \"Inter_600SemiBold\"\n  }\n});","map":{"version":3,"names":["Ionicons","MaterialCommunityIcons","useFonts","Poppins_600SemiBold","Inter_600SemiBold","NavigationButton","props","name","pageName","onPress","accessibilityState","focused","selected","fontsLoaded","styles","buttonNavigation","texto","color","StyleSheet","create","display","alignItems","width","paddingLeft","paddingRight","paddingTop","paddingBottom","fontFamily"],"sources":["C:/Users/Aluno/Documents/Gustavo Taima 3DM/tcc_front-end_mobile/src/components/NavigationButton/index.js"],"sourcesContent":["import { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport { useFonts, Poppins_600SemiBold } from \"@expo-google-fonts/poppins\";\r\nimport {Inter_600SemiBold} from \"@expo-google-fonts/inter\"\r\n\r\n// <MaterialCommunityIcons name=\"account\" size={24} color=\"black\" />\r\n// <MaterialCommunityIcons name=\"clipboard-list-outline\" size={24} color=\"black\" />\r\n\r\nexport default function NavigationButton(props) {\r\n  const { name, pageName, onPress, accessibilityState } = props;\r\n  const focused = accessibilityState.selected;\r\n\r\n  let [fontsLoaded] = useFonts({\r\n    Poppins_600SemiBold,\r\n    Inter_600SemiBold\r\n  });\r\n\r\n  if (!fontsLoaded) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <TouchableOpacity onPress={onPress}>\r\n      <View style={styles.buttonNavigation}>\r\n        <MaterialCommunityIcons\r\n          name={name}\r\n          size={30}\r\n          color={focused ? \"#23AFFF\" : \"#A9A3A3\"}\r\n        />\r\n        <Text\r\n          style={[styles.texto, { color: focused ? \"#23AFFF\" : \"#A9A3A3\" }]}\r\n        >\r\n          {pageName}\r\n        </Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonNavigation: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: 200,\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n  },\r\n  texto: {\r\n    fontFamily: \"Inter_600SemiBold\",\r\n  },\r\n});\r\n"],"mappings":";;;;;AACA,SAASA,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,sBAAsB,QAAQ,oBAAoB;AAC3D,SAASC,QAAQ,EAAEC,mBAAmB,QAAQ,4BAA4B;AAC1E,SAAQC,iBAAiB,QAAO,0BAA0B;AAAA;AAAA;AAK1D,eAAe,SAASC,gBAAgB,CAACC,KAAK,EAAE;EAC9C,IAAQC,IAAI,GAA4CD,KAAK,CAArDC,IAAI;IAAEC,QAAQ,GAAkCF,KAAK,CAA/CE,QAAQ;IAAEC,OAAO,GAAyBH,KAAK,CAArCG,OAAO;IAAEC,kBAAkB,GAAKJ,KAAK,CAA5BI,kBAAkB;EACnD,IAAMC,OAAO,GAAGD,kBAAkB,CAACE,QAAQ;EAE3C,gBAAoBV,QAAQ,CAAC;MAC3BC,mBAAmB,EAAnBA,mBAAmB;MACnBC,iBAAiB,EAAjBA;IACF,CAAC,CAAC;IAAA;IAHGS,WAAW;EAKhB,IAAI,CAACA,WAAW,EAAE;IAChB,OAAO,IAAI;EACb;EAEA,OACE,KAAC,gBAAgB;IAAC,OAAO,EAAEJ,OAAQ;IAAA,UACjC,MAAC,IAAI;MAAC,KAAK,EAAEK,MAAM,CAACC,gBAAiB;MAAA,WACnC,KAAC,sBAAsB;QACrB,IAAI,EAAER,IAAK;QACX,IAAI,EAAE,EAAG;QACT,KAAK,EAAEI,OAAO,GAAG,SAAS,GAAG;MAAU,EACvC,EACF,KAAC,IAAI;QACH,KAAK,EAAE,CAACG,MAAM,CAACE,KAAK,EAAE;UAAEC,KAAK,EAAEN,OAAO,GAAG,SAAS,GAAG;QAAU,CAAC,CAAE;QAAA,UAEjEH;MAAQ,EACJ;IAAA;EACF,EACU;AAEvB;AAEA,IAAMM,MAAM,GAAGI,UAAU,CAACC,MAAM,CAAC;EAC/BJ,gBAAgB,EAAE;IAChBK,OAAO,EAAE,MAAM;IACfC,UAAU,EAAE,QAAQ;IACpBC,KAAK,EAAE,GAAG;IACVC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE,EAAE;IAChBC,UAAU,EAAE,CAAC;IACbC,aAAa,EAAE;EACjB,CAAC;EACDV,KAAK,EAAE;IACLW,UAAU,EAAE;EACd;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}